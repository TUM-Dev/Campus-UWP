<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BBBUrl" xml:space="preserve">
    <value>https://bbb.rbg.tum.de/</value>
  </data>
  <data name="BugReportsUrl" xml:space="preserve">
    <value>https://github.com/COM8/TUM_Campus_App_UWP/issues</value>
  </data>
  <data name="EatApiBugUrl" xml:space="preserve">
    <value>https://github.com/TUM-Dev/eat-api/issues</value>
  </data>
  <data name="FeedbackUrl" xml:space="preserve">
    <value>https://github.com/COM8/TUM_Campus_App_UWP/issues</value>
  </data>
  <data name="GeneralSettingsPage_automated_crash_reports_tooltip.Text" xml:space="preserve">
    <value>**On**  
Do not show the report "Something went wrong..." crash dialog, in case we cought an exception. Just report it.

**Off**  
In case we cought a crash, you will receive a dialog informing you about the crash and what will be reported.</value>
  </data>
  <data name="GitHubUrl" xml:space="preserve">
    <value>https://github.com/COM8/TUM_Campus_App_UWP/tree/v2</value>
  </data>
  <data name="Ingredient_1" xml:space="preserve">
    <value>with dyestuff</value>
  </data>
  <data name="Ingredient_10" xml:space="preserve">
    <value>with a source of phenylalanine</value>
  </data>
  <data name="Ingredient_11" xml:space="preserve">
    <value>with sugar and sweeteners</value>
  </data>
  <data name="Ingredient_13" xml:space="preserve">
    <value>with cocoa-containing grease</value>
  </data>
  <data name="Ingredient_14" xml:space="preserve">
    <value>with gelatin</value>
  </data>
  <data name="Ingredient_2" xml:space="preserve">
    <value>with preservative</value>
  </data>
  <data name="Ingredient_3" xml:space="preserve">
    <value>with antioxidant</value>
  </data>
  <data name="Ingredient_4" xml:space="preserve">
    <value>with flavor enhancers</value>
  </data>
  <data name="Ingredient_5" xml:space="preserve">
    <value>sulphured</value>
  </data>
  <data name="Ingredient_6" xml:space="preserve">
    <value>blackened olive</value>
  </data>
  <data name="Ingredient_7" xml:space="preserve">
    <value>waxed</value>
  </data>
  <data name="Ingredient_8" xml:space="preserve">
    <value>with phosphate</value>
  </data>
  <data name="Ingredient_9" xml:space="preserve">
    <value>with sweeteners</value>
  </data>
  <data name="Ingredient_99" xml:space="preserve">
    <value>with alcohol</value>
  </data>
  <data name="Ingredient_Ei" xml:space="preserve">
    <value>with chicken egg</value>
  </data>
  <data name="Ingredient_En" xml:space="preserve">
    <value>with peanut</value>
  </data>
  <data name="Ingredient_F" xml:space="preserve">
    <value>meatless dish</value>
  </data>
  <data name="Ingredient_Fi" xml:space="preserve">
    <value>with fish</value>
  </data>
  <data name="Ingredient_G" xml:space="preserve">
    <value>with poultry</value>
  </data>
  <data name="Ingredient_Gl" xml:space="preserve">
    <value>with gluten-containing cereals</value>
  </data>
  <data name="Ingredient_GlD" xml:space="preserve">
    <value>with spelt</value>
  </data>
  <data name="Ingredient_GlG" xml:space="preserve">
    <value>with barley</value>
  </data>
  <data name="Ingredient_GlH" xml:space="preserve">
    <value>with oats</value>
  </data>
  <data name="Ingredient_GlR" xml:space="preserve">
    <value>with rye</value>
  </data>
  <data name="Ingredient_GlW" xml:space="preserve">
    <value>with wheat</value>
  </data>
  <data name="Ingredient_GQB" xml:space="preserve">
    <value>Certified Quality - Bavaria</value>
  </data>
  <data name="Ingredient_K" xml:space="preserve">
    <value>with veal</value>
  </data>
  <data name="Ingredient_Kn" xml:space="preserve">
    <value>with garlic</value>
  </data>
  <data name="Ingredient_Kr" xml:space="preserve">
    <value>with crustaceans</value>
  </data>
  <data name="Ingredient_L" xml:space="preserve">
    <value>with lamb</value>
  </data>
  <data name="Ingredient_Lu" xml:space="preserve">
    <value>with lupines</value>
  </data>
  <data name="Ingredient_Mi" xml:space="preserve">
    <value>with milk and lactose</value>
  </data>
  <data name="Ingredient_MSC" xml:space="preserve">
    <value>Marine Stewardship Council</value>
  </data>
  <data name="Ingredient_R" xml:space="preserve">
    <value>with beef</value>
  </data>
  <data name="Ingredient_S" xml:space="preserve">
    <value>with pork</value>
  </data>
  <data name="Ingredient_Sc" xml:space="preserve">
    <value>with shell fruits</value>
  </data>
  <data name="Ingredient_ScC" xml:space="preserve">
    <value>with cashew nuts</value>
  </data>
  <data name="Ingredient_ScH" xml:space="preserve">
    <value>with hazelnuts</value>
  </data>
  <data name="Ingredient_ScM" xml:space="preserve">
    <value>with almonds</value>
  </data>
  <data name="Ingredient_ScP" xml:space="preserve">
    <value>with pistachios</value>
  </data>
  <data name="Ingredient_ScW" xml:space="preserve">
    <value>with Walnuts</value>
  </data>
  <data name="Ingredient_Se" xml:space="preserve">
    <value>with sesame seeds</value>
  </data>
  <data name="Ingredient_Sf" xml:space="preserve">
    <value>with mustard</value>
  </data>
  <data name="Ingredient_Sl" xml:space="preserve">
    <value>with celery</value>
  </data>
  <data name="Ingredient_So" xml:space="preserve">
    <value>with soy</value>
  </data>
  <data name="Ingredient_Sw" xml:space="preserve">
    <value>with sulfur dioxide and sulfites</value>
  </data>
  <data name="Ingredient_V" xml:space="preserve">
    <value>vegan dish</value>
  </data>
  <data name="Ingredient_W" xml:space="preserve">
    <value>with wild meat</value>
  </data>
  <data name="Ingredient_Wt" xml:space="preserve">
    <value>with mollusks</value>
  </data>
  <data name="LicenseUrl" xml:space="preserve">
    <value>https://github.com/COM8/TUM_Campus_App_UWP/blob/v2/LICENSE</value>
  </data>
  <data name="MoodleUrl" xml:space="preserve">
    <value>https://www.moodle.tum.de/</value>
  </data>
  <data name="PrivacyPolicyCrashReportsUrl" xml:space="preserve">
    <value>https://github.com/COM8/TUM_Campus_App_UWP/tree/v2/PRIVACY_POLICY.md#crash-reporting</value>
  </data>
  <data name="PrivacyPolicyUrl" xml:space="preserve">
    <value>https://github.com/COM8/TUM_Campus_App_UWP/tree/v2/PRIVACY_POLICY.md</value>
  </data>
  <data name="ReportCrashDialog_always_report_tooltip.Text" xml:space="preserve">
    <value>Do not show this dialog any more. Just report crashes automatically.
You can disable this again by changing `Settings` -&gt; `Misc` -&gt; `Automatic extended crash reports` to false.</value>
  </data>
  <data name="SetupPage_RequestTokenFailed" xml:space="preserve">
    <value>Failed to request a new token. Please try again.
View the logs for more information.</value>
  </data>
  <data name="SetupPage_TokenActivationFailed" xml:space="preserve">
    <value>Token has not been activated yet.
View the logs for more information.</value>
  </data>
  <data name="TumLiveUrl" xml:space="preserve">
    <value>https://live.rbg.tum.de/</value>
  </data>
  <data name="TumOnlineUrl" xml:space="preserve">
    <value>https://campus.tum.de/</value>
  </data>
  <data name="TumSexyUrl" xml:space="preserve">
    <value>https://tum.sexy/</value>
  </data>
  <data name="TumZoomUrl" xml:space="preserve">
    <value>https://tum-conf.zoom.us/</value>
  </data>
  <data name="ZulipUrl" xml:space="preserve">
    <value>https://zulip.in.tum.de</value>
  </data>
</root>